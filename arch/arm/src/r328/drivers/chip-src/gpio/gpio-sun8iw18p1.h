
/*
* Copyright (c) 2019-2025 Allwinner Technology Co., Ltd. ALL rights reserved.
*
* Allwinner is a trademark of Allwinner Technology Co.,Ltd., registered in
* the the people's Republic of China and other countries.
* All Allwinner Technology Co.,Ltd. trademarks are used with permission.
*
* DISCLAIMER
* THIRD PARTY LICENCES MAY BE REQUIRED TO IMPLEMENT THE SOLUTION/PRODUCT.
* IF YOU NEED TO INTEGRATE THIRD PARTY’S TECHNOLOGY (SONY, DTS, DOLBY, AVS OR MPEGLA, ETC.)
* IN ALLWINNERS’SDK OR PRODUCTS, YOU SHALL BE SOLELY RESPONSIBLE TO OBTAIN
* ALL APPROPRIATELY REQUIRED THIRD PARTY LICENCES.
* ALLWINNER SHALL HAVE NO WARRANTY, INDEMNITY OR OTHER OBLIGATIONS WITH RESPECT TO MATTERS
* COVERED UNDER ANY REQUIRED THIRD PARTY LICENSE.
* YOU ARE SOLELY RESPONSIBLE FOR YOUR USAGE OF THIRD PARTY’S TECHNOLOGY.
*
*
* THIS SOFTWARE IS PROVIDED BY ALLWINNER"AS IS" AND TO THE MAXIMUM EXTENT
* PERMITTED BY LAW, ALLWINNER EXPRESSLY DISCLAIMS ALL WARRANTIES OF ANY KIND,
* WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION REGARDING
* THE TITLE, NON-INFRINGEMENT, ACCURACY, CONDITION, COMPLETENESS, PERFORMANCE
* OR MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
* IN NO EVENT SHALL ALLWINNER BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
* NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS, OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
* STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef __GPIO_SUN8IW18P1_H__
#define __GPIO_SUN8IW18P1_H__

#define SUNXI_GPIO_PBASE         0X0300B000 /* 1K */

#define ARRAY_SIZE(x)       (sizeof(x) / sizeof((x)[0]))

#ifdef __cplusplus
extern "C" {
#endif

typedef enum {
	HAL_GPIO_32 = GPIOB(0),
	HAL_GPIO_33 = GPIOB(1),
	HAL_GPIO_34 = GPIOB(2),
	HAL_GPIO_35 = GPIOB(3),
	HAL_GPIO_36 = GPIOB(4),
	HAL_GPIO_37 = GPIOB(5),
	HAL_GPIO_38 = GPIOB(6),
	HAL_GPIO_39 = GPIOB(7),
	HAL_GPIO_40 = GPIOB(8),
	HAL_GPIO_41 = GPIOB(9),
	HAL_GPIO_42 = GPIOB(10),
	HAL_GPIO_43 = GPIOB(11),
	HAL_GPIO_44 = GPIOB(12),
	HAL_GPIO_45 = GPIOB(13),

	HAL_GPIO_64 = GPIOC(0),
	HAL_GPIO_65 = GPIOC(1),
	HAL_GPIO_66 = GPIOC(2),
	HAL_GPIO_67 = GPIOC(3),
	HAL_GPIO_68 = GPIOC(4),
	HAL_GPIO_69 = GPIOC(5),
	HAL_GPIO_70 = GPIOC(6),
	HAL_GPIO_71 = GPIOC(7),
	HAL_GPIO_72 = GPIOC(8),
	HAL_GPIO_73 = GPIOC(9),
	HAL_GPIO_74 = GPIOC(10),
	HAL_GPIO_75 = GPIOC(11),
	HAL_GPIO_76 = GPIOC(12),
	HAL_GPIO_77 = GPIOC(13),
	HAL_GPIO_78 = GPIOC(14),
	HAL_GPIO_79 = GPIOC(15),
	HAL_GPIO_80 = GPIOC(16),

	HAL_GPIO_128 = GPIOE(0),
	HAL_GPIO_129 = GPIOE(1),
	HAL_GPIO_130 = GPIOE(2),
	HAL_GPIO_131 = GPIOE(3),
	HAL_GPIO_132 = GPIOE(4),
	HAL_GPIO_133 = GPIOE(5),
	HAL_GPIO_134 = GPIOE(6),

	HAL_GPIO_192 = GPIOG(0),
	HAL_GPIO_193 = GPIOG(1),
	HAL_GPIO_194 = GPIOG(2),
	HAL_GPIO_195 = GPIOG(3),
	HAL_GPIO_196 = GPIOG(4),
	HAL_GPIO_197 = GPIOG(5),
	HAL_GPIO_198 = GPIOG(6),
	HAL_GPIO_199 = GPIOG(7),
	HAL_GPIO_200 = GPIOG(8),
	HAL_GPIO_201 = GPIOG(9),
	HAL_GPIO_202 = GPIOG(10),
	HAL_GPIO_203 = GPIOG(11),
	HAL_GPIO_204 = GPIOG(12),
	HAL_GPIO_205 = GPIOG(13),
	HAL_GPIO_206 = GPIOG(14),

	HAL_GPIO_224 = GPIOH(0),
	HAL_GPIO_225 = GPIOH(1),
	HAL_GPIO_226 = GPIOH(2),
	HAL_GPIO_227 = GPIOH(3),
	HAL_GPIO_228 = GPIOH(4),
	HAL_GPIO_229 = GPIOH(5),
	HAL_GPIO_230 = GPIOH(6),
	HAL_GPIO_231 = GPIOH(7),
	HAL_GPIO_232 = GPIOH(8),
	HAL_GPIO_233 = GPIOH(9),
}hal_gpio_pin_t;


/* gpio interrupt cpnfig */
//#define SUNXI_GIC_START          32

#define SUNXI_IRQ_GPIOB                 (SUNXI_GIC_START + 43)  /* 75 gpiob interrupt */
#define SUNXI_IRQ_GPIOE                 (SUNXI_GIC_START + 44)  /* 76 gpioe interrupt */
#define SUNXI_IRQ_GPIOG                 (SUNXI_GIC_START + 46)  /* 78 gpiog interrupt */
#define SUNXI_IRQ_GPIOH                 (SUNXI_GIC_START + 47)  /* 79 gpioh interrupt */

//#define SUNXI_IRQ_MAX			(SUNXI_GIC_START + 256)
//#define NR_IRQS				(SUNXI_IRQ_MAX)

void sun8iw18p1_gpio_init(void);

#ifdef __cplusplus
}
#endif

#endif
